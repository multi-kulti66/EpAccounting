<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:behavior="clr-namespace:EpAccounting.UI.Behavior"
    xmlns:controls="http://metro.mahapps.com/winfx/xaml/controls"
    xmlns:converter="clr-namespace:EpAccounting.UI.Converter"
    xmlns:prop="clr-namespace:EpAccounting.UI.Properties"
    xmlns:userControl="clr-namespace:EpAccounting.UI.View.User_Control"
    xmlns:viewModel="clr-namespace:EpAccounting.UI.ViewModel">

    <!--  Converter  -->
    <converter:BitmapToBitmapImageConverter x:Key="BitmapToBitmapImageConverter" />
    <converter:ButtonDisplayNameToIsDefaultConverter x:Key="ButtonDisplayNameToIsDefaultConverter" />
    <converter:BoolInverterConverter x:Key="BoolInverterConverter" />
    <converter:UnitToDoubleConverter x:Key="UnitToDoubleConverter" />

    <!--  Style: Grid  -->
    <Style x:Key="TitleGridStyle" TargetType="{x:Type Grid}">
        <Setter Property="Background" Value="Gray" />
    </Style>

    <!--  Style: GridSplitter  -->
    <Style x:Key="HorizontalGridSplitterStyle" TargetType="{x:Type GridSplitter}">
        <Setter Property="Background" Value="DarkGray" />
        <Setter Property="Height" Value="3" />
        <Setter Property="HorizontalAlignment" Value="Stretch" />
        <Setter Property="IsEnabled" Value="False" />
        <Setter Property="Margin" Value="5,0,5,0" />
    </Style>

    <Style x:Key="VerticalGridSplitterStyle" TargetType="{x:Type GridSplitter}">
        <Setter Property="Background" Value="DarkGray" />
        <Setter Property="IsEnabled" Value="False" />
        <Setter Property="Margin" Value="0,5,0,5" />
        <Setter Property="VerticalAlignment" Value="Stretch" />
        <Setter Property="Width" Value="3" />
    </Style>

    <!--  Style: Image  -->
    <Style x:Key="DatabaseConnectionImageStyle" TargetType="{x:Type Image}">
        <Setter Property="Height" Value="20" />
        <Setter Property="HorizontalAlignment" Value="Center" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="Width" Value="20" />
        <Style.Triggers>
            <DataTrigger Binding="{Binding Path=(viewModel:MainViewModel.IsConnected), Mode=OneWay}" Value="true">
                <Setter Property="Source" Value="/EpAccounting.UI;component/Resources/img_db_connected.png" />
            </DataTrigger>
            <DataTrigger Binding="{Binding Path=(viewModel:MainViewModel.IsConnected), Mode=OneWay}" Value="false">
                <Setter Property="Source" Value="/EpAccounting.UI;component/Resources/img_db_disconnected.png" />
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="PrintedImageStyle" TargetType="{x:Type Image}">
        <Setter Property="Height" Value="40" />
        <Setter Property="HorizontalAlignment" Value="Left" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="Width" Value="40" />
        <Style.Triggers>
            <DataTrigger Binding="{Binding Path=CurrentBillDetailViewModel.Printed, Mode=OneWay}" Value="true">
                <Setter Property="Source" Value="/EpAccounting.UI;component/Resources/img_printed.png" />
            </DataTrigger>
            <DataTrigger Binding="{Binding Path=CurrentBillDetailViewModel.Printed, Mode=OneWay}" Value="false">
                <Setter Property="Source" Value="/EpAccounting.UI;component/Resources/img_notPrinted.png" />
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="PrintedImageColumnStyle" TargetType="{x:Type Image}">
        <Setter Property="Height" Value="20" />
        <Setter Property="HorizontalAlignment" Value="Center" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="Width" Value="20" />
        <Style.Triggers>
            <DataTrigger Binding="{Binding Path=Printed, Mode=OneWay}" Value="true">
                <Setter Property="Source" Value="/EpAccounting.UI;component/Resources/img_printed.png" />
            </DataTrigger>
            <DataTrigger Binding="{Binding Path=Printed, Mode=OneWay}" Value="false">
                <Setter Property="Source" Value="/EpAccounting.UI;component/Resources/img_notPrinted.png" />
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <!--  Style: ListBox  -->
    <Style
        x:Key="MainMenuListBoxStyle"
        BasedOn="{StaticResource {x:Type ListBox}}"
        TargetType="ListBox">
        <Setter Property="Background" Value="Gray" />
        <Setter Property="HorizontalAlignment" Value="Left" />
        <Setter Property="Width" Value="Auto" />
    </Style>

    <!--  Style: Button  -->
    <Style BasedOn="{StaticResource {x:Type Button}}" TargetType="{x:Type Button}">
        <Setter Property="FontSize" Value="16" />
        <Setter Property="HorizontalAlignment" Value="Stretch" />
        <Setter Property="Margin" Value="5,0,5,0" />
        <Setter Property="VerticalAlignment" Value="Stretch" />
        <Setter Property="controls:ButtonHelper.PreserveTextCase" Value="True" />
    </Style>

    <!--  Style: ComboBox  -->
    <Style BasedOn="{StaticResource {x:Type ComboBox}}" TargetType="{x:Type ComboBox}">
        <Setter Property="HorizontalAlignment" Value="Stretch" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="Margin" Value="5,0,5,0" />
        <Setter Property="VerticalAlignment" Value="Stretch" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
    </Style>

    <!--  Style: TextBox  -->
    <Style BasedOn="{StaticResource {x:Type TextBox}}" TargetType="{x:Type TextBox}">
        <Setter Property="FontSize" Value="16" />
        <Setter Property="HorizontalAlignment" Value="Stretch" />
        <Setter Property="Margin" Value="5,0,5,0" />
        <Setter Property="TextAlignment" Value="Center" />
        <Setter Property="VerticalAlignment" Value="Stretch" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="behavior:SelectAllTextOnFocusBehavior.SelectTextOnFocus" Value="True" />
    </Style>

    <Style
        x:Key="LeftTextAlignTextBoxStyle"
        BasedOn="{StaticResource {x:Type TextBox}}"
        TargetType="TextBox">
        <Setter Property="TextAlignment" Value="Left" />
    </Style>

    <Style
        x:Key="EditIdTextBoxStyle"
        BasedOn="{StaticResource {x:Type TextBox}}"
        TargetType="{x:Type TextBox}">
        <Setter Property="Background" Value="DarkGray" />
        <Setter Property="Foreground" Value="White" />
    </Style>

    <!--  Style: TextBlock  -->
    <Style BasedOn="{StaticResource {x:Type TextBlock}}" TargetType="{x:Type TextBlock}">
        <Setter Property="FontSize" Value="20" />
        <Setter Property="HorizontalAlignment" Value="Stretch" />
        <Setter Property="Margin" Value="5,0,5,0" />
        <Setter Property="TextAlignment" Value="Left" />
        <Setter Property="VerticalAlignment" Value="Center" />
    </Style>

    <Style
        x:Key="CaptionTextBlockStyle"
        BasedOn="{StaticResource {x:Type TextBlock}}"
        TargetType="TextBlock">
        <Setter Property="FontSize" Value="22" />
        <Setter Property="FontWeight" Value="Bold" />
        <Setter Property="Margin" Value="5" />
        <Setter Property="TextDecorations" Value="Underline" />
    </Style>

    <Style
        x:Key="TitleTextBlockStyle"
        BasedOn="{StaticResource {x:Type TextBlock}}"
        TargetType="TextBlock">
        <Setter Property="FontSize" Value="30" />
        <Setter Property="Foreground" Value="White" />
        <Setter Property="TextAlignment" Value="Center" />
    </Style>

    <Style
        x:Key="UnderlinedTextBlockStyle"
        BasedOn="{StaticResource {x:Type TextBlock}}"
        TargetType="TextBlock">
        <Setter Property="FontWeight" Value="Bold" />
        <Setter Property="TextDecorations" Value="Underline" />
    </Style>



    <!--  DataTemplate: WorkspaceViewModel  -->
    <DataTemplate x:Key="MenuWorkspaceViewModelStyle" DataType="{x:Type viewModel:WorkspaceViewModel}">
        <Image
            Width="30"
            Height="30"
            Margin="5"
            Source="{Binding Path=Image, Converter={StaticResource BitmapToBitmapImageConverter}}" />
    </DataTemplate>

    <!--  DataTemplate: ClientViewModel  -->
    <DataTemplate DataType="{x:Type viewModel:ClientViewModel}">
        <userControl:ClientView />
    </DataTemplate>

    <!--  DataTemplate: BillViewModel  -->
    <DataTemplate DataType="{x:Type viewModel:BillViewModel}">
        <userControl:BillView />
    </DataTemplate>

    <!--  DateTemplate: BillSearchViewModel  -->
    <DataTemplate DataType="{x:Type viewModel:BillSearchViewModel}">
        <userControl:BillSearchView />
    </DataTemplate>

    <!--  DataTemplate: BillItemEditViewModel  -->
    <DataTemplate DataType="{x:Type viewModel:BillItemEditViewModel}">
        <userControl:BillItemEditView />
    </DataTemplate>

    <!--  DataTemplate: ArticlesOptionViewModel  -->
    <DataTemplate DataType="{x:Type viewModel:ArticlesOptionViewModel}">
        <userControl:ArticlesOptionView />
    </DataTemplate>

    <!--  DataTemplate: OptionViewModel  -->
    <DataTemplate DataType="{x:Type viewModel:OptionViewModel}">
        <userControl:OptionView />
    </DataTemplate>

    <!--  DataTemplate: ImageCommandViewModel  -->
    <DataTemplate x:Key="ImageCommandDataTemplate" DataType="{x:Type viewModel:ImageCommandViewModel}">
        <Button
            Width="40"
            Height="40"
            Margin="10,0,10,0"
            Command="{Binding Path=RelayCommand}"
            IsDefault="{Binding Path=DisplayName, Converter={StaticResource ButtonDisplayNameToIsDefaultConverter}}">
            <Image Source="{Binding Path=Image, Converter={StaticResource BitmapToBitmapImageConverter}}" />
            <Button.ToolTip>
                <TextBlock Text="{Binding Path=DisplayName}" />
            </Button.ToolTip>
        </Button>
    </DataTemplate>

    <DataTemplate x:Key="ImageCommandContextMenuDataTemplate" DataType="{x:Type viewModel:ImageCommandViewModel}">
        <MenuItem Command="{Binding Path=RelayCommand}" Header="{Binding Path=DisplayName}">
            <MenuItem.Icon>
                <Image
                    Width="20"
                    Height="20"
                    Source="{Binding Path=Image, Converter={StaticResource BitmapToBitmapImageConverter}}" />
            </MenuItem.Icon>
        </MenuItem>
    </DataTemplate>

    <!--  DataTemplate: NumericDataGridCell  -->
    <DataTemplate x:Key="NumericDataGridCellTemplate" DataType="{x:Type DataGridCell}">
        <TextBox behavior:TextBoxNumericBehavior.IsTextBoxNumericEnabled="True" Text="{Binding Path=ArticleNumber}" />
    </DataTemplate>


</ResourceDictionary>